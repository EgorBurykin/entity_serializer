${{ var }} = new \stdClass();
${{ var }}_links = [];
if ($sample === 'id') {
    ${{ var }}->id = ${{ object }}->getId();
} else {
    {% for field in fields %}
        if ($sample === 'all' || isset($sample->{{field.name}})) {
            $val = ${{ object }}->{{field.getter}}();
            if ($val) {
                {% if field.type != 'embed' %}
                    ${{ var }}->{{field.name}} = $this->transform($val, '{{ field.type }}', $sample === 'all'? null: $sample->{{ field.name }});
                {% else  %}
                    $_{{ object }} = $val;
                    {% include 'function.php.twig'
                        with {'var':'_'~var,
                        'fields': field.fields,
                        'links': field.relations,
                        'object': '_'~object,
                        'return': false
                    }%}
                    ${{ var }}->{{ field.name }} = $_{{ var }};
                {% endif %}
            }
        }
    {% endfor%}
    {% for link in links %}
    if (($sample === 'all' || isset($sample->{{link.name}})) && $val = ${{ object }}->{{link.getter}}()) {
        $innerSample = $sample == 'all'? 'id': $sample->{{link.name}};
        if (is_string($innerSample) && $innerSample !== 'all' || isset($this->_transformers['{{ link.entity }}'])) {
        {% if not link.isSingleValued %}
            ${{ var }}->{{ link.name }} = [];
            foreach($val as $item) {
                ${{ var }}->{{ link.name }}[] = $this->transform($item, '{{ link.entity }}', is_string($innerSample)? $innerSample: null);
            }
        {% else %}
            ${{ var }}->{{ link.name }} = $this->transform($val, '{{ link.entity }}', is_string($innerSample)? $innerSample: null);
        {% endif %}
        } else {
        {% if not link.isSingleValued %}
            ${{ var }}_links['{{link.name}}'] = [];
            foreach($val as $item) {
                $class = ClassUtils::getRealClass(get_class($item));
                if (is_object($innerSample) && isset($innerSample->$class)) {
                    ${{ var }}_links['{{link.name}}'][] = static::getNode($item, $innerSample->$class, $class);
                } else {
                    ${{ var }}_links['{{link.name}}'][] = static::getNode($item, $innerSample, $class);
                }
            }
        {% else %}
            $class = ClassUtils::getRealClass(get_class($val));
            if (is_object($innerSample) && isset($innerSample->$class)) {
                ${{ var }}_links['{{link.name}}'] = static::getNode($val, $innerSample->$class, $class);
            } else {
                ${{ var }}_links['{{link.name}}'] = static::getNode($val, $innerSample, $class);
            }
        {% endif %}
        }
    }
    {% endfor %}
}
{% if return %}
return new Node(${{ var }}, ${{ var }}_links);
{% endif %}
