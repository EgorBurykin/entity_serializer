<?php
{% spaceless %}
use Jett\JSONEntitySerializerBundle\Service\BaseSerializer;

use Jett\JSONEntitySerializerBundle\Nodes\Node;

use Doctrine\Common\Util\ClassUtils;

use Jett\JSONEntitySerializerBundle\Exception\EntityNotFoundException;

class {{ name }} extends BaseSerializer {

    {% for entity,code in classes %}
    protected function normalize{{ entity|replace({'\\':''}) }}(&$object, &$sample) {
        {{ code|raw }}
    }
    {% endfor %}

    public function toPlainJSON($entity, &$sample, string $entityFQCN) {
        switch ($entityFQCN) {
            {% for entity,code in classes
            %}case '{{ entity }}':
                return $this->normalize{{ entity|replace({'\\':''}) }}($entity, $sample);
            {% endfor
            %}default:
                throw new EntityNotFoundException('{{ entity }}');
        }
    }

}
{% endspaceless %}